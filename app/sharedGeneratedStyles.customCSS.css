

.project-type-missing-tasks-hint {
    background-image:url("<?php echo UrlFrom("{assets}/Control Panel Icons/tree.png?tint=rgb(198, 175, 79)"); ?>");
}

button.btn-reset-list {
    background-image:url("<?php echo UrlFrom("{assets}/Control Panel Icons/reset.png?tint=rgb(106, 233, 191)"); ?>");

    width: 20px;
    height: 20px;
    vertical-align: middle;
    margin-right: 10px;
    background-color: transparent;
    border: none;
    background-size: 100%;
    
}




button.btn-search-list {
    background-image:url("<?php echo UrlFrom("{assets}/Control Panel Icons/search.png?tint=rgb(106, 233, 191)"); ?>");

    width: 20px;
    height: 20px;
    vertical-align: middle;
    margin-right: 10px;
    background-color: transparent;
    border: none;
    background-size: 100%;
    
}


<?php 
$config=GetWidget('dashboardConfig');



$useFontAwesome=$config->getParameter('useFontAwesome');
if($useFontAwesome){
    ?>
    
    <?php
}


    $offset=10;
    foreach(['remove', 'edit', 'download'] as $fileFn){
        

            ?>
               .file-list .file-item button.<?php echo $fileFn; ?>-btn {
                    top:<?php echo $offset; $offset+=30;?>px;
                }
           <?php  
        
    
    }


if(!$useFontAwesome){
    foreach(['remove', 'edit', 'download'] as $fileFn){
        $editIcon=$config->getParameter('file'.ucfirst($fileFn).'BtnIcon', array());
            if(!empty($editIcon)){

            ?>
                .file-item .<?php echo $fileFn; ?>-btn {
                    background-image:url("<?php echo UrlFrom($editIcon[0].'?thumb=x>100y>100'); ?>");
                }
           <?php  
        }
     
    }
}

if($config->getParameter('showSplitProjectDetail')){
    ?>
   
   [data-view="splitProjectDetail"]>div>div{
        display:inline-table;
        width: 100%;
        height: 100%;
    }
    
    
    
    <?php
    
}

foreach(['apple', 'google'] as $mobile){
    $appIcon=$config->getParameter($mobile.'AppIcon', array());
        if(!empty($appIcon)){

        ?>
            .<?php echo $mobile; ?>-app-link{
                
                background-image:url("<?php echo UrlFrom($appIcon[0].'?thumb=x>200y>100'); ?>");
            }
       <?php  
    }
   
    
    
}

if(!$useFontAwesome){
    $addIcon=$config->getParameter('fileUploadBtnIcon', array());
    if(!empty($addIcon)){

        ?>
        .file-list .droppable .add-btn {
            background-image:url("<?php echo UrlFrom($addIcon[0].'?thumb=x>100y>100'); ?>");
        }
        <?php

    }
}



$menuIconDefault=$config->getParameter('defaultMenuIcon')[0];




if(!$useFontAwesome){
    foreach($config->getParameters() as $key=>$value){
        foreach(array('main', 'people', 'accounting','community', 'configuration') as $section){
            if(strpos($key, $section.'-')===0){
                $icon=$menuIconDefault;
                if(!empty($value)){
                    $icon=$value[0];
                }
                ?>
                li.menu-<?php echo $key; ?>:before{
                    background-image:url("<?php echo UrlFrom($icon."?thumb=>20x>20&tint=".$config->getParameter("menuIconColor", "rgb(180,180,180)")); ?>");
                }
                li.menu-<?php echo $key; ?>.active:before{
                    background-image:url("<?php echo UrlFrom($icon."?thumb=>20x>20&tint=".$config->getParameter("menuIconTint")); ?>");
                }
                
                
                .label-<?php echo $key; ?>{
                    background-image:url("<?php echo UrlFrom($icon."?thumb=>20x>20&tint=".$config->getParameter("menuIconColor", "rgb(180,180,180)")); ?>");
                }
                
                <?php
            }
        }
    }
}




$applicationLogo=$config->getParameter('applicationLogo', array());
if(empty($applicationLogo)){
    $applicationLogo=$menuIconDefault;
}else{
    $applicationLogo=$applicationLogo[0];
}



?>
 .application-logo {

    background-image:url("<?php echo UrlFrom($applicationLogo."?thumb=>200x>200"); ?>");
}  

<?php




$gatherLogo=$config->getParameter('gatherLogo', array());
        if(empty($gatherLogo)){
            $gatherLogo=$menuIconDefault;
        }else{
            $gatherLogo=$gatherLogo[0];
        }
    ?>
 .gather-logo {

    background-image:url("<?php echo UrlFrom($gatherLogo."?thumb=>200x>200"); ?>");
}  


<?php 
if(!$useFontAwesome){
    $attachmentIcon=$config->getParameter('attachmentIcon', array());
    if(empty($attachmentIcon)){
        $attachmentIcon=$attachmentIcon;
    }else{
        $attachmentIcon=$attachmentIcon[0];
    }

    ?>
    
    .attachment-indicator {
        background-image:url("<?php echo UrlFrom($attachmentIcon."?tint=".$config->getParameter("attachmentTint", "rgb(180,180,180)")); ?>");
    }


    .discussion button.upload-button {
        background-image: url("<?php echo UrlFrom($attachmentIcon."?tint=".$config->getParameter("attachmentTint", "rgb(180,180,180)")); ?>");
       
    }

<?php
}
?>

.discussion button.upload-button {
    font-size: 0;
    height: 37px;
    background-size: auto 28px;
    background-repeat: no-repeat;
    background-position: center;
    position: relative;
}

<?php 


if(!$useFontAwesome){
    ?>
    .field-value-module.with-description .field-value:after{
         background-image: url("<?php echo UrlFrom("{assets}/Control Panel Icons/text.png?tint=rgb(180,180,180)"); ?>");
    }
<?php 
}
?>
.field-value-module.with-description .field-value:after{
    content: "";
    width: 20px;
    height: 14px;
    background-size: auto 100%;
    display: inline-block;
    background-repeat: no-repeat;
    background-position: center;
    vertical-align:middle;
}



<?php



if(!$useFontAwesome){
    ?>
.synopsis-item {
    background-image:url("<?php echo UrlFrom($menuIconDefault."?tint=rgb(180,180,180)"); ?>");
}
<?php 
}
?>




<?php 


if(!$useFontAwesome){
    
        $starredIcon=$config->getParameter('starIcon', array());
        if(empty($starredIcon)){
            $starredIcon=$menuIconDefault;
        }else{
            $starredIcon=$starredIcon[0];
        }
    ?>
 .starred-indicator {

    background-image:url("<?php echo UrlFrom($starredIcon."?tint=rgb(180,180,180)"); ?>");
}   
.starred-indicator.starred {

    background-image:url("<?php echo UrlFrom($starredIcon."?tint=".$config->getParameter("starTint", "rgb(180,180,180)")); ?>");
}


.starred-tasks {
    background-image:url("<?php echo UrlFrom($starredIcon."?tint=".$config->getParameter("starTint", "rgb(180,180,180)")); ?>");
    border-color:<?php echo $config->getParameter("starTint", "rgb(180,180,180)"); ?>;
    
}

<?php 
}
?>





<?php 


if(!$useFontAwesome){


    $priorityIcon=$config->getParameter('priorityIcon', array());
    if(empty($priorityIcon)){
        $priorityIcon=$menuIconDefault;
    }else{
        $priorityIcon=$priorityIcon[0];
    }

     $overdueIcon=$config->getParameter('overdueIcon', array());
    if(empty($overdueIcon)){
        $overdueIcon=$menuIconDefault;
    }else{
        $overdueIcon=$overdueIcon[0];
    }


    $remainingIcon=$config->getParameter('remainingIcon', array());
    if(empty($remainingIcon)){
        $remainingIcon=$menuIconDefault;
    }else{
        $remainingIcon=$remainingIcon[0];
    }



    ?>
    .priority-indicator {

        background-image:url("<?php echo UrlFrom($priorityIcon."?tint=rgb(180,180,180)"); ?>");
    }   
    .priority-indicator.priority {

        background-image:url("<?php echo UrlFrom($priorityIcon."?tint=".$config->getParameter("priorityTint", "rgb(180,180,180)")); ?>");
    }

    .priority-tasks {
        background-image:url("<?php echo UrlFrom($priorityIcon."?tint=".$config->getParameter("priorityTint", "rgb(180,180,180)")); ?>");
        border-color:<?php echo $config->getParameter("priorityTint", "rgb(180,180,180)"); ?>;
        
    }



    .overdue-tasks {
        background-image:url("<?php echo UrlFrom($overdueIcon."?tint=".$config->getParameter("overdueTint", "rgb(180,180,180)")); ?>");
        border-color:<?php echo $config->getParameter("overdueTint", "rgb(180,180,180)"); ?>;
        
    }


    .remaining-tasks {
        background-image:url("<?php echo UrlFrom($remainingIcon."?tint=".$config->getParameter("remainingTint", "rgb(180,180,180)")); ?>");
        border-color:<?php echo $config->getParameter("remainingTint", "rgb(180,180,180)"); ?>;
        
    }


    .segment.overdue{
        background-image:url("<?php echo UrlFrom($overdueIcon."?tint=rgba(50,50,50)"); ?>");
    }
    .segment.completed{
         background-image:url("<?php echo UrlFrom($remainingIcon."?tint=rgba(60, 179, 113)"); ?>");
    }
    .segment.created{
         background-image:url("<?php echo UrlFrom($starredIcon."?tint=rgba(106, 124, 233)"); ?>");
    }
    .segment.duedate, .segment.complete{
         background-image:url("<?php echo UrlFrom($overdueIcon."?tint=rgba(60, 179, 113)"); ?>");
    }

<?php 
}
?>




<?php 


foreach(GetPlugin("ReferralManagement")->getRoleIcons() as $role=>$icon){
    ?>
    .role-<?php echo $role; ?>{
        background-image:url('<?php echo UrlFrom($icon); ?>?grayscale');
        filter: grayscale(100);
    }
    
    .role-<?php echo $role; ?>.active{
        background-image:url('<?php echo UrlFrom($icon); ?>');
        filter: grayscale(0);
    }
 <?php   
}




foreach(['image', 'document', 'layer', 'audio', 'video'] as $mime){
    $mediaIcon=$config->getParameter($mime.'UploadIcon', array());
        if(empty($mediaIcon)){
            $mediaIcon=$menuIconDefault;
        }else{
            $mediaIcon=$mediaIcon[0];
        }
    ?>
        .upload-btns span.<?php echo $mime?>.noIcon {
            background-image:url("<?php echo UrlFrom($mediaIcon."?tint=".$config->getParameter("uploadTint", "rgb(180,180,180)")); ?>");
        }
    <?php
    
    
}



foreach(['prev', 'next'] as $nav){
    $navIcon=$config->getParameter($nav.'NavIcon', array());
        if(empty($navIcon)){
            $navIcon=$menuIconDefault;
        }else{
            $navIcon=$navIcon[0];
        }
    ?>
       .<?php echo $nav; ?>-btn {
            background-image:url("<?php echo UrlFrom($navIcon."?tint=".$config->getParameter("uploadTint", "rgb(180,180,180)")); ?>");
        }
        .<?php echo $nav; ?>-btn:hover {
            background-image:url("<?php echo UrlFrom($navIcon."?tint=".$config->getParameter("menuIconTint")); ?>");
        }
    <?php
    
    
}



$backgroundImage=$config->getParameter('backgroundImage', array());
        if(!empty($backgroundImage)){
          
            $backgroundImage=$backgroundImage[0];
            ?>

            .ui-view.dashboard-main:after {
                background-image: url("<?php echo UrlFrom($backgroundImage."?thumb=>200x>200"); ?>");
                position: fixed;
                width: 100%;
                height: 100%;
                content: "";
                top: 0;
                left: 0;
                opacity: 0.2;
                pointer-events: none;
                background-size: cover;
                filter: blur(10px);
            }
            <?php
        }
        
        
        
        
        $optionsMenuIcon=$config->getParameter('optionsMenuIcon', array());
        if(!empty($optionsMenuIcon)){
          
            $optionsMenuIcon=$optionsMenuIcon[0];
            ?>

            .inline-btn.optionlist:before {
                background-image: url("<?php echo UrlFrom($optionsMenuIcon."?thumb=x>100y>100&tint=".$config->getParameter("menuIconColor", "rgb(180,180,180)")); ?>");
                display: inline-block;
                width: 6px;
                height: 25px;
                background-size: auto 100%;
                background-position: center;
                content: "";
                background-repeat: no-repeat;
            }
            .inline-btn.optionlist:hover:before {
             background-image: url("<?php echo UrlFrom($optionsMenuIcon."?thumb=x>100y>100&tint=".$config->getParameter("menuIconTint")); ?>");
            }
            <?php
        }
        
        
         $surveyMenuIcon=$config->getParameter('surveyMenuIcon', array());
        if(!empty($surveyMenuIcon)){
          
            $surveyMenuIcon=$surveyMenuIcon[0];
            ?>
            
            .survey-link{
                
                text-align: left;
                font-size: 10px;
            }

            .survey-link a:before {
                background-image: url("<?php echo UrlFrom($surveyMenuIcon."?thumb=x>100y>100&tint=".$config->getParameter("menuIconColor", "rgb(180,180,180)")); ?>");
                content:"";
                display: inline-block;
                width: 20px;
                height: 20px;
                background-size: 100%;
                margin: 5px;
                vertical-align: middle;
            }
            .survey-link a:hover:before {
                background-image: url("<?php echo UrlFrom($surveyMenuIcon."?thumb=x>100y>100&tint=".$config->getParameter("menuIconTint")); ?>");
            }
            <?php
        }
        
        
        $slackMenuIcon=$config->getParameter('slackMenuIcon', array());
        if(!empty($slackMenuIcon)){
          
            $slackMenuIcon=$slackMenuIcon[0];
            ?>
            
            .survey-link a.slack-link:before {
                background-image: url("<?php echo UrlFrom($slackMenuIcon."?thumb=x>100y>100"); ?>");
            }
            
            <?php
        }
        
         if(!$config->getParameter("showUsersRoles")){
            ?>
        
            .user-detail .user-role, .user-detail .user-community{
                display:none;
            }
            <?php
        }else{
            ?>
            .user-detail .user-role, .user-detail .user-community{
               
            }
            <?php
        }
                
        if(!$config->getParameter("showFileThumbnails")){
            ?>
            .image.attachment-thumb{
                display:none;
            }
            <?php
        }
        
        
        
?>