{
    "type": "UIListView",
    "config": {
        "listClassName": "",
        "className": "user-item",
        "viewType": "view",
        "namedView": "selectableUserListItemDetail",
        "shouldRender": true,
        "namedViewScript": "return namedView",
        "showInlineEdit": false,
        "namedFormView": "defaultFormView",
        "formOptions": "{}",
        "showDeleteButton": false,
        "deleteItemScript": "",
        "initModuleScript": "",
        "formatModuleScript": "",
        "resolveItemScript": "return item",
        "filterModulesScript": "\n\n\nvar userCollection=item;\/\/application.getNamedValue(\"currentProject\");\n\nconsole.log(\"Item is: \"+(item===userCollection?\"same\":\"diff\"))\n\nvar setLabelAndStyle=function(btn){\n    \n    if(userCollection.hasUser(listItem)){\n         btn.innerHTML= \"Remove\"\n         btn.addClass(\"error\");\n        \n    }else{\n         btn.innerHTML=\"Add\"; \n         btn.removeClass(\"error\");\n        \n    }\n    \n   \n}\nvar button = new ElementModule('button', {\"class\":\"primary-btn\", html:\"Add\", events:{click:function(){\n    \n  if(userCollection.hasUser(listItem)){\n      userCollection.removeUser(listItem);\n  }else{\n      userCollection.addUser(listItem);\n  }\n    \n  \n    setLabelAndStyle(button.getElement());\n    \n}}});\n\nsetLabelAndStyle(button.getElement());\n\n\nlist.content.push(button);\n\n\n\n\nreturn list",
        "itemButtonsScript": "return [];",
        "insertAtTop": false,
        "targetName": "",
        "getItemListScript": "return item.getAvailableUsers();",
        "formatItemListScript": "return list;",
        "formatListItemModuleScript": "",
        "emptyNamedView": "emptyListView",
        "filterItemsScript": "return true;",
        "sortItemsScript": "",
        "maxItems": "-1"
    }
}