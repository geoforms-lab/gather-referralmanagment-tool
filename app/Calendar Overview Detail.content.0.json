{
    "type": "WizardScriptElement",
    "config": {
        "script": "return function(viewer, element, parentModule){\nvar isLoaded=false;\n\nif(!application.getNamedValue(\"selectedDay\")){\n        application.setNamedValue(\"selectedDay\", (new Date()).toISOString().split('T')[0]);\n    }\n\n\nvar activeDayEl=null;\n\nvar todayStr = (new Date()).toISOString().split('T')[0];\nif(!application.getNamedValue(\"selectedDay\")){\n    application.setNamedValue(\"selectedDay\", day);\n}\nvar renderList=function(dates){\n                var listView=viewer.getChildView('content',1);\n                 if(listView){\n                     \n                    var dateList=[];\n                    Object.keys(dates).forEach(function(key){\n                        dateList.push({\"date\":key,\"events\":dates[key]})\n                    })\n                     dateList.sort(function(a,b){\n                         return a.date>b.date?1:-1;\n                     });\n                     listView.redraw(null, dateList);\n                 }\n            };\n            \n            \nvar setSelectedDay=function(day, el){\n    \n            application.setNamedValue(\"selectedDay\", day);\n            if(activeDayEl){\n                activeDayEl.removeClass(\"active\");\n            }\n            activeDayEl=el;\n            el.addClass(\"active\");\n}\n\nvar redrawSiblingList=function(){\n    var start=new Date(application.getNamedValue(\"selectedDay\"))\n    var range=[start, new Date(start.valueOf()+(1000*3600*24))];\n    ProjectTeam.CurrentTeam().runOnceOnLoad(function(team){\n        var dates=team.getEventDates(range); \n        \n        if(isLoaded){\n                 renderList(dates);\n            }else{\n                viewer.addEvent('load:once',function(){\n                   setTimeout(function(){\n                       renderList(dates);\n                   }, 100);\n                });\n            }\n    });\n};\n\n(new CalendarModule({\n    data:function(range, callback){\n        \n        ProjectTeam.CurrentTeam().runOnceOnLoad(function(team){\n            var dates=team.getEventDates(range);\n            callback(dates);\n        });\n    },\n    events:{\n        selectDay:function(day, el){\n            console.log('Select day:'+day);\n            \n            var controller=application.getNamedValue('navigationController');\n        \n        \n            setSelectedDay(day, el);\n            \n            var view=controller.getCurrentView()\n            if(view.view!==\"Calendar\"){\n               controller.navigateTo(\"Calendar\", \"Main\"); \n               return;\n            }\n            \n            redrawSiblingList();\n            \n            \n            \n            \n            \n        }\n    },\n    dayElFormatter:function(el, day){\n        \n        if(application.getNamedValue(\"selectedDay\")===day){\n    \n                setSelectedDay(day, el);   \n                redrawSiblingList();\n        }\n        \n        \n    },\n    eventDataFormatter:function(data, dayEl){\n                 var el=dayEl.appendChild(new Element('span',{\"class\":'events'}))\n                 var renderDataItem=function(d){\n                       var dataEl=el.appendChild(new Element('span',{\"class\":\"event-data\",\"data-label\":d.item.getName()})); \n                       if(d.item.isComplete()){\n                           dataEl.addClass(\"complete\");\n                        }\n                        if(d.item.isOverdue()){\n                           dataEl.addClass(\"overdue\"); \n                               \n                        }\n                    }\n\n                \n                if(data.length){\n                    data.forEach(function(str){\n                        renderDataItem(str);\n                    })\n                    \n                     dayEl.addEvents(ReferralManagementDashboard.taskHighlightMouseEvents(function(){\n                        return data.map(function(d){\n                            return d.item;\n                        })\n                     }))\n                   \n                    \n                    \n                }\n                \n                \n                \n                \n                \n               \n                \n                \n            }\n            \n})).load(null, element, null);\n\n\nviewer.addEvent('load:once',function(){\n   isLoaded=true; \n});\n\n}",
        "identifier": "customScriptElement"
    }
}