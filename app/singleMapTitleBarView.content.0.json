{
    "type": "UIListView",
    "config": {
        "listClassName": "projects-list",
        "className": "",
        "identifier": "",
        "viewType": "view",
        "namedView": "singleProjectListItemDetail",
        "shouldRender": true,
        "namedViewScript": "\nvar view=DashboardConfig.getValue(\"projectListItemView\");\nif(view){\n    return view;\n}\n\n\nreturn \"singleProjectListItemDetail\"",
        "showInlineEdit": false,
        "namedFormView": "defaultView",
        "formOptions": "\"{}\"",
        "showDeleteButton": false,
        "deleteItemScript": "defaultBehaviorFn()",
        "initModuleScript": "",
        "formatModuleScript": "",
        "resolveItemScript": "return item;",
        "filterModulesScript": "\nconsole.log('format list modules');\n\nconsole.log(list);\n\nlist.content=([\n        new Element('button',{\n            html:'toggle'\n            events:{\n                click:function(){\n                    console.log(toggle)\n                }\n            }\n        })\n    ]).concat(list.content,[\n        new Element('button',{\n            html:'remove'\n            events:{\n                click:function(){\n                    console.log(toggle)\n                }\n            }\n        }),\n        new Element('button',{\n            html:'config'\n            events:{\n                click:function(){\n                    console.log(toggle)\n                }\n            }\n        })\n        \n    \n    ]);\n\n\nreturn list",
        "itemButtonsScript": "return [];",
        "insertAtTop": false,
        "targetName": "",
        "getItemListScript": "  \n if(item.getProjectList){\n     item.getProjectList(callback);\n     return;\n }\n \n if(item instanceof Project){\n     \n    (new ProjectList({\n\t\t\t\t\t\t\t\"label\":\"Collection Datasets\",\n\t\t\t                \"showCreateBtn\":true,\n\t\t\t                projects:function(callback){\n\t\t\t                \tcallback([item].concat(item.getProjectObjects()));\n\t\t\t                }\n\t\t\t\t\t\t})).getProjectList(callback);\n     \n     return;\n }\n\n (new ProjectList({\n\t\t\t\t\t\t\t\"label\":\"Collection Datasets\",\n\t\t\t                \"showCreateBtn\":true,\n\t\t\t                projects:function(callback){\n\t\t\t                \tcallback(ProjectSelection.getProjects());\n\t\t\t                }\n\t\t\t\t\t\t})).getProjectList(callback);\n     \n     return;\n       \n       \n       \n       ",
        "formatItemListScript": "return list;",
        "formatListItemModuleScript": "ProjectList.AddListItemClassNames(child, childView, application);",
        "emptyNamedView": "emptyListView",
        "filterItemsScript": "return true;",
        "sortItemsScript": "",
        "maxItems": "-1"
    }
}